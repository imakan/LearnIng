美团
【一面】
围绕项目展开，介绍了项目中的重难点。
在聊项目的过程中，问我如何实现一个虚拟滚动，以Vue为例，数据如何做映射？DOM结构如何设计？在滚动的过程中，DOM结构如何保持在可见的位置？
Node在处理海量的数据时如何设计？（多线程，pipe流，进程间通信，socket通信等）
通过Canvas对图像进行滤镜处理的功能如何设计？（Worker等）
如何封装一个对象，不让对象内部的方法暴露出去？（用Symbol作为key，相对普通key而言比较不容易被外部修改，但还是存在暴露的可能；如果一定要保证不暴露，就只好使用闭包了）
算法题：
（1）矩阵旋转90度（当时已经面了快一个小时了，看我短时间内没有思路，就换了下面这道题，并且让我说了思路就结束了）
（2）字符串压缩。利用字符重复出现的次数，编写一种方法，实现基本的字符串压缩功能。比如，字符串aabcccccaaa会变为a2b1c5a3。若“压缩”后的字符串没有变短，则返回原先的字符串。你可以假设字符串中只包含大小写英文字母（a至z）。
示例1:
输入："aabcccccaaa"
输出："a2b1c5a3"
示例2:
输入："abbccd"
输出："abbccd"
解释："abbccd"压缩后为"a1b2c2d1"，比原字符串长度更长。
const compressString = function (S) {
    let count = 0;
    let newStr = '';
    const newArr = S.split('');
    const size = newArr.length;
    for (let i = 0; i < size; i++) {
        count++;
        if (newArr[i] !== newArr[i + 1]) {
            newStr += newArr[i] + count;
            count = 0;
        }
    }
    return S.length > newStr.length ? newStr : S;
};

【二面】
围绕项目展开，介绍了项目中的重难点。
问项目中做了哪些优化？如何衡量优化效果？是否有错误上报机制？（这个地方没有回答好，导致二面评价我对架构设计理解比较浅，指标意识相对较弱）
从浏览器输入网址到页面展示中间经历了什么？（我聊了DNS缓存、DNS解析、TCP连接、HTTPS加密过程、HTTP2.0多路复用、js阻塞页面加载）
面试官根据上面问题的回答进行扩展提问：强缓存和协商缓存，服务端缓存，CDN原理与回源策略
算法题：策略洗牌（类似田忌赛马）

【三面】
三面约在晚上九点。面试官迟到了，21:20才开始面试。
问的内容不多，主要还是围绕项目展开，介绍了项目中的重难点。
提问我们项目中是否做了单元测试。（没有。。。）
然后就写两道算法题。。。
第一道：如何判断一个点在三角形内部。
第二道：求最长公共子序列。